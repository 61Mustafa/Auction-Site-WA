###
POST http://localhost:3000/games/1/bids
Authorization: Bearer {{jwt_token}}
Content-Type: application/json

{
  "bidAmount": 80
}

> {%
    client.test("Bid added successfully", function () {
        client.assert(response.status === 201, "Response status is not 201");
        client.assert(response.body.message === "Bid added successfully", "Expected 'Bid added successfully' message");
    });
%}

### BAD POST request - Missing required fields
POST http://localhost:3000/games/1/bids
Authorization: Bearer {{jwt_token}}
Content-Type: application/json

{
  "bidAmount": 70
}

> {%
    client.test("Missing fields results in 400 Bad Request", function () {
        client.assert(response.status === 400, "Response status is not 400");
        client.assert(response.body.message.includes("Missing required fields"), "Expected missing fields error");
    });
%}

### BAD POST request - Game not found
POST http://localhost:3000/games/999/bids
Authorization: Bearer {{jwt_token}}
Content-Type: application/json

{
  "bidAmount": 70,
  "bidTime": "2024-09-25T10:00:00Z",
  "userId": 1
}

> {%
    client.test("Game not found results in 404", function () {
        client.assert(response.status === 404, "Response status is not 404");
        client.assert(response.body.message.includes("Game with ID 999 not found"), "Expected not found error");
    });
%}

### BAD POST request - Invalid game ID
POST http://localhost:3000/games/abc/bids
Authorization: Bearer {{jwt_token}}
Content-Type: application/json

{
  "bidAmount": 70,
  "bidTime": "2024-09-25T10:00:00Z",
  "userId": 1
}

> {%
    client.test("Invalid game ID results in 400 Bad Request", function () {
        client.assert(response.status === 400, "Response status is not 400");
        client.assert(response.body.message.includes("Invalid game ID"), "Expected invalid game ID error");
    });
%}