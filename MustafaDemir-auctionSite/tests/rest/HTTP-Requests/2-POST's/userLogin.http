### GOOD POST request to log in a user
POST http://localhost:3000/users/login
Content-Type: application/json

{
  "email": "emma@example.com",
  "password": "hashedpassword3"
}

> {%
    client.test("User logged in successfully", function () {
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(response.body.message === "Login successful", "Expected 'Login successful' message");
        client.assert(response.body.user.email === "emma@example.com", "Expected email to be 'emma@example.com'");
        client.assert(response.body.token, "Expected a token in the response");

        client.global.set("jwt_token", response.body.token);
        console.log("JWT-token opgeslagen:", response.body.token);
    });
%}

### BAD POST request - Missing required fields
POST http://localhost:3000/users/login
Authorization: Bearer {{jwt_token}}
Content-Type: application/json

{
  "email": "emma@example213123.com"
}

> {%
    client.test("Missing fields results in 400 Bad Request", function () {
        client.assert(response.status === 400, "Response status is not 400");

        client.assert(response.body.message === "Missing email or password", "Expected Missing email or password error message");
    });
%}

### BAD POST request - Incorrect password
POST http://localhost:3000/users/login
Authorization: Bearer {{jwt_token}}
Content-Type: application/json

{
  "email": "emma@example.com",
  "password": "hashedpassword234234"
}

> {%
    client.test("Incorrect password results in 401 Unauthorized", function () {
        client.assert(response.status === 401, "Response status is not 401");
        client.assert(response.body.message.includes("Incorrect password"), "Expected unauthorized error");
    });
%}
